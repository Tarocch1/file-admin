name: Release Workflow
on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - id: checkout
        name: Checkout
        uses: actions/checkout@v4
      - id: setup_go
        name: Setup go
        uses: actions/setup-go@v5
        with:
          go-version: '1'
      - id: setup_nodejs
        name: Setup node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
      - id: npm_ci
        name: npm ci
        run: |
          cd .github/actions
          npm ci
      - id: build_web
        name: Build web
        run: |
          cd web
          npm ci
          npm run build
      - id: build
        name: Build
        uses: ./.github/actions/build
        env:
          COMMIT_ID: ${{ github.sha }}
        with:
          ref: ${{ github.ref }}
      - id: upload-artifact
        name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist
      - id: create_release
        name: Create Release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
      - id: upload_release_asset
        name: Upload Release Asset
        uses: ./.github/actions/upload-release-asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
  docker:
    name: Docker
    runs-on: ubuntu-latest
    needs: release
    steps:
      - id: checkout
        name: Checkout
        uses: actions/checkout@v4
      - id: download-artifact
        name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - name: Login to DockerHub
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESSTOKEN }}
      - name: Login to Aliyun
        uses: docker/login-action@v3.3.0
        with:
          registry: registry.cn-hongkong.aliyuncs.com
          username: ${{ secrets.ALIYUN_DOCKER_USERNAME }}
          password: ${{ secrets.ALIYUN_DOCKER_PASSWORD }}
      - name: Setup QEMU
        id: qemu
        uses: docker/setup-qemu-action@v3.2.0
        with:
          platforms: all
      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3.7.1
        with:
          version: latest
      - id: docker
        name: Docker
        uses: ./.github/actions/docker
